def balanced_library(n):
    """Return list of balanced fixture with minimum runs of 3 for 10, 16 or 22 teams that can't be obtained by cyclic balancing.
    Original source of balanced from Ian spreadsheet hidden library sheet.
    Converted and permuted to reduce runs of 3.
    """
    if n == 10:
        return balanced10()
    elif n == 16:
        return balanced16()
    elif n == 22:
        return balanced22()
    else:
        return ""


def balanced10():
    list10 = [[(0, 5), (1, 6), (2, 7), (3, 8), (4, 9)],
            [(6, 4), (7, 0), (1, 8), (2, 9), (5, 3)],
            [(4, 1), (0, 2), (6, 3), (9, 7), (8, 5)],
            [(3, 2), (9, 8), (4, 0), (5, 6), (7, 1)],
            [(7, 3), (8, 4), (0, 9), (1, 5), (2, 6)],
            [(8, 7), (3, 9), (5, 4), (6, 0), (1, 2)],
            [(2, 8), (4, 3), (9, 5), (0, 1), (6, 7)],
            [(9, 6), (2, 5), (3, 1), (7, 4), (0, 8)],
            [(1, 9), (5, 7), (8, 6), (4, 2), (3, 0)]]
    return list10


def balanced16():
    """replace with better"""
    list16 = [[(2, 3), (8, 13), (1, 6), (12, 15), (10, 11), (0, 5), (14, 9), (4, 7)],
              [(5, 4), (9, 11), (8, 15), (2, 6),
               (12, 13), (1, 3), (0, 7), (10, 14)],
              [(0, 1), (10, 12), (11, 14), (5, 7),
               (9, 8), (2, 4), (3, 6), (15, 13)],
              [(6, 7), (5, 3), (4, 0), (9, 10),
               (15, 14), (13, 11), (8, 12), (2, 1)],
              [(12, 11), (7, 1), (2, 5), (8, 14),
               (3, 4), (9, 15), (10, 13), (0, 6)],
              [(14, 13), (0, 2), (3, 7), (4, 1),
               (5, 6), (8, 10), (15, 11), (9, 12)],
              [(15, 10), (4, 6), (9, 13), (3, 0),
               (7, 2), (14, 12), (5, 1), (11, 8)],
              [(8, 0), (3, 10), (6, 12), (14, 5),
               (11, 7), (4, 9), (1, 15), (13, 2)],
              [(11, 2), (1, 9), (15, 4), (7, 13),
               (8, 5), (10, 6), (12, 3), (14, 0)],
              [(4, 14), (12, 7), (10, 2), (1, 8),
               (13, 3), (15, 0), (9, 5), (6, 11)],
              [(13, 6), (15, 5), (0, 9), (11, 3),
               (14, 1), (12, 2), (7, 10), (8, 4)],
              [(3, 15), (13, 0), (5, 11), (6, 9),
               (4, 12), (7, 14), (2, 8), (1, 10)],
              [(1, 12), (2, 14), (7, 8), (10, 4),
               (6, 15), (5, 13), (11, 0), (3, 9)],
              [(7, 9), (11, 4), (13, 1), (15, 2),
               (0, 10), (3, 8), (6, 14), (12, 5)],
              [(10, 5), (6, 8), (14, 3), (0, 12), (2, 9), (11, 1), (13, 4), (7, 15)]]
    return list16


def balanced22():
    """replace with better"""  
    list22 = [[(0, 11), (1, 12), (2, 13), (3, 14), (4, 15), (5, 16), (6, 17), (7, 18), (8, 19), (9, 20), (10, 21)],
              [(1, 10), (13, 11), (3, 12), (2, 4), (16, 14),
               (17, 15), (5, 7), (8, 6), (18, 20), (21, 19), (0, 9)],
              [(2, 9), (3, 10), (11, 15), (1, 5), (13, 6), (14, 18),
               (4, 8), (16, 20), (17, 21), (7, 0), (19, 12)],
              [(8, 3), (20, 15), (21, 16), (11, 17), (18, 12),
               (19, 13), (14, 9), (10, 4), (5, 0), (6, 1), (7, 2)],
              [(4, 7), (5, 8), (9, 6), (21, 18), (11, 19), (12, 20),
               (2, 10), (3, 0), (15, 1), (13, 16), (17, 14)],
              [(6, 5), (18, 17), (8, 7), (19, 20), (10, 9), (11, 21),
               (1, 0), (12, 13), (3, 2), (15, 14), (16, 4)],
              [(21, 1), (2, 0), (12, 14), (13, 15), (5, 3), (6, 4),
               (16, 18), (19, 17), (7, 9), (10, 8), (11, 20)],
              [(20, 2), (14, 21), (0, 4), (12, 16), (17, 13),
               (3, 7), (15, 19), (5, 9), (6, 10), (18, 11), (8, 1)],
              [(3, 19), (9, 4), (10, 5), (0, 6), (7, 1), (8, 2),
               (20, 14), (21, 15), (16, 11), (17, 12), (18, 13)],
              [(18, 4), (16, 19), (20, 17), (10, 7), (0, 8), (1, 9),
               (13, 21), (14, 11), (12, 15), (2, 5), (6, 3)],
              [(5, 17), (7, 6), (19, 18), (8, 9), (21, 20), (0, 10),
               (12, 11), (1, 2), (14, 13), (4, 3), (15, 16)],
              [(12, 21), (11, 2), (1, 3), (4, 13), (14, 5), (15, 6),
               (7, 16), (17, 8), (9, 18), (19, 10), (20, 0)],
              [(13, 20), (21, 3), (4, 11), (5, 12), (6, 2), (7, 14),
               (8, 15), (9, 16), (10, 17), (0, 18), (1, 19)],
              [(19, 14), (4, 20), (5, 21), (6, 11), (12, 7), (13, 8),
               (9, 3), (15, 10), (0, 16), (1, 17), (2, 18)],
              [(15, 18), (19, 5), (6, 20), (7, 21), (8, 11), (9, 12),
               (10, 13), (0, 14), (1, 4), (16, 2), (3, 17)],
              [(17, 16), (6, 18), (7, 19), (20, 8), (9, 21),
               (10, 11), (0, 12), (13, 1), (2, 14), (3, 15), (4, 5)],
              [(10, 12), (0, 13), (14, 1), (15, 2), (3, 16), (4, 17),
               (18, 5), (6, 19), (20, 7), (8, 21), (9, 11)],
              [(9, 13), (10, 14), (15, 0), (16, 1), (2, 17), (18, 3),
               (19, 4), (20, 5), (21, 6), (11, 7), (12, 8)],
              [(14, 8), (15, 9), (16, 10), (17, 0), (1, 18), (2, 19),
               (3, 20), (4, 21), (11, 5), (12, 6), (13, 7)],
              [(7, 15), (8, 16), (17, 9), (18, 10), (19, 0), (20, 1),
               (21, 2), (11, 3), (4, 12), (5, 13), (14, 6)],
              [(16, 6), (17, 7), (18, 8), (9, 19), (20, 10), (21, 0), (11, 1), (2, 12), (13, 3), (14, 4), (5, 15)]]
    return list22
